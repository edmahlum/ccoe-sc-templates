AWSTemplateFormatVersion: '2010-09-09'
Description: 'Lambda CCOE compliant python serverless function.'
Parameters:
  Handler:
    Type: String
    Description: Provide the name of your lambda handler
  ApplicationName:
    Type: String
    Description: Provide the name of the application associated with this provisioned product
    Default: DefaultApplication
    MinLength: '1'
    MaxLength: '128'
    AllowedPattern: "([a-zA-Z0-9][a-zA-Z0-9_-]*)"
Resources:
  ApplicationAssociation:
    Type: AWS::ServiceCatalogAppRegistry::ResourceAssociation
    Properties:
      Application:
        Ref: ApplicationName
      ResourceType: CFN_STACK
      Resource:
        Ref: AWS::StackId
  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Sid: ''
            Effect: 'Allow'
            Principal:
              Service:
                - 'lambda.amazonaws.com'
            Action:
              - 'sts:AssumeRole'
      Path: "/"
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - logs:*
                Resource: arn:aws:logs:*:*:*

  LambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      Runtime: python3.6
      Timeout: 5
      Handler: 'handler.test'
      Role: !GetAtt LambdaExecutionRole.Arn
      Code:
        ZipFile: |
          import json

          def handler(event,context):

            return {
                'statusCode': 200,
                'body': json.dumps('Hello')
            }
Outputs:
  LambdaArn:
    Description: The ARN for the lambda function
    Value: !GetAtt LambdaFunction.Arn